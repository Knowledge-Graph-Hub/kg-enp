# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
# To use a PEP 517 build-backend you are required to configure tox to use an isolated_build:
# https://tox.readthedocs.io/en/latest/example/package.html
isolated_build = True
skipsdist = True

envlist =
    # always keep coverage-clean first
    coverage-clean
    codespell-write
    docstr-coverage
    flake8
    format
    lint
    py

[testenv]
allowlist_externals =
    poetry
commands =
    poetry run pytest {posargs}
description = Run unit tests with pytest. This is a special environment that does not get a name, and
              can be referenced with "py".

[testenv:coverage-clean]
deps = coverage
skip_install = true
commands = coverage erase

# This is used during development
[testenv:format]
deps =
    black
    ruff
skip_install = true
commands =
    black kg_enp/ tests/
    ruff --fix kg_enp/ tests/
description = Run linters.

# This is used for QC checks.
[testenv:lint]
deps =
    black
    ruff
skip_install = true
commands =
    black --check --diff kg_enp/ tests/
    ruff check kg_enp/ tests/
description = Run linters.

[testenv:doclint]
deps =
    rstfmt
skip_install = true
commands =
    rstfmt docs/source/
description = Run documentation linters.

[testenv:codespell]
description = Run spell checker.
skip_install = true
deps = 
    codespell
    tomli  # required for getting config from pyproject.toml
commands = codespell kg_enp/ tests/

[testenv:codespell-write]
description = Run spell checker and write corrections.
skip_install = true
deps = 
    codespell
    tomli
commands = codespell kg_enp/ tests/ --write-changes

[testenv:docstr-coverage]
skip_install = true
deps =
    docstr-coverage
commands =
    docstr-coverage kg_enp/ tests/ --skip-private --skip-magic
description = Run the docstr-coverage tool to check documentation coverage

[testenv:flake8]
skip_install = true
commands =
    flake8 kg_phenio/ tests/
deps =
    flake8<5.0.0
    flake8-black
    flake8-colors
    bandit
    flake8-bandit
    pep8-naming
    flake8-bugbear
    flake8-isort
    flake8-docstrings
    pydocstyle
    
description = Run the flake8 code quality checker.

#########################
# Flake8 Configuration  #
# (.flake8)             #
#########################
[flake8]
ignore =
    W503 # line break before binary operator
    BLK100 # Black would make changes.
    S301 # Pickle and modules that wrap it can be unsafe when used to deserialize untrusted data, possible security issue.
    S403 # Consider possible security implications associated with pickle module.
    S506 # Use of unsafe yaml load. Allows instantiation of arbitrary objects.
    S101 # Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.
    S202 # tarfile.extractall used without any validation. Please check and discard dangerous members.
    S310 # Audit url open for permitted schemes. Allowing use of file:/ or custom schemes is often unexpected.
max-line-length = 88
extend-ignore = E203